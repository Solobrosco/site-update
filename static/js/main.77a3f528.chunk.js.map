{"version":3,"sources":["static/Background.svg","static/Stars.svg","static/Moon.svg","static/MountainLake.svg","static/Foreground.svg","components/NavBar.tsx","components/SplashPage.tsx","components/MyRoom.tsx","components/Skills.tsx","components/About.tsx","components/SimpleSplashPage.tsx","components/Gallery.tsx","components/Education.tsx","components/Experience.tsx","components/Downloads.tsx","components/Stats.tsx","components/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavBar","props","useState","open","setOpen","className","date","moment","format","time","ticking","timezone","type","onClick","id","enable-background","height","viewBox","width","xmlns","d","href","states","about","gallery","experience","stats","SplashPage","pages","scrolling","offset","speed","src","Layer0","alt","Layer1","Layer2","text","Layer3","Layer4","MyRoom","Skills","name","rank","About","SimpleSplashPage","quote","keys","Object","quotes","randIndex","Math","floor","random","length","pickRandomQuote","author","Gallery","Education","education","school","major","Experience","map","item","title","company","start","end","description","Downloads","resume","certificates","Stats","Footer","App","state","navbar","splashpage","simplesplashpage","myroom","downloads","footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.77a3f528.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Background.73205117.svg\";","module.exports = __webpack_public_path__ + \"static/media/Stars.9ffb2a9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Moon.ea7919f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/MountainLake.9c822371.svg\";","module.exports = __webpack_public_path__ + \"static/media/Foreground.9e91d4a5.svg\";","import React, { useState } from 'react';\n\nimport moment from 'moment';\nimport Clock from 'react-live-clock';\n\n// DATA\nimport states from '../data/state.json';\n// fix spacing \n\ninterface NavBarProps {\n    time: boolean,\n    date: boolean\n}\n\nconst NavBar = (props: NavBarProps) => {\n    const [open, setOpen] = useState(false);\n    return(\n            <div className='bg-gray-900 sticky top-0'>\n                {/* <header className='bg-gray-900 sticky top-0'> */}\n                <div className=\"flex inline-block align-middle py-3 px-10 text-center\">\n                    <div className='w-1/3 font-extrabold text-white hover:text-gray-700'>\n                        Nikko A. Solon\n                    </div>\n                    <div className='w-1/3 font-bold text-white hover:text-gray-700'>\n                        {props.date ? moment().format('MMMM do YYYY') : 'Feburary 16th 2020'}\n                        <span> </span>\n                        <span className='text-green-500 hover:text-green-700'>  \n                            {props.time ? <Clock format={'H:mm:ss'} ticking={true} timezone={'US/Pacific'} /> : \"10:10:35\"}\n                        </span>\n                    </div>\n                    <div className='w-1/3 text-white'>\n                        <button type='button' className='' onClick={() => setOpen(!open)}>\n                            {/* Icon provided by Freepik */}\n                            <svg className='h-6 w-6 fill-current hover:text-gray-700' id=\"Layer_1\" enable-background=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"m464.883 64.267h-417.766c-25.98 0-47.117 21.136-47.117 47.149 0 25.98 21.137 47.117 47.117 47.117h417.766c25.98 0 47.117-21.137 47.117-47.117 0-26.013-21.137-47.149-47.117-47.149z\"/><path d=\"m464.883 208.867h-417.766c-25.98 0-47.117 21.136-47.117 47.149 0 25.98 21.137 47.117 47.117 47.117h417.766c25.98 0 47.117-21.137 47.117-47.117 0-26.013-21.137-47.149-47.117-47.149z\"/><path d=\"m464.883 353.467h-417.766c-25.98 0-47.117 21.137-47.117 47.149 0 25.98 21.137 47.117 47.117 47.117h417.766c25.98 0 47.117-21.137 47.117-47.117 0-26.012-21.137-47.149-47.117-47.149z\"/>\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n                {open && (\n                    <div className='px-10 pb-4'>\n                        <a href='#top' className='hover:bg-gray-700 rounded px-2 py-1 block text-white font-semibold' onClick={() => setOpen(!open)}>Home</a>\n                        {states.about && (<a href='#About' onClick={() => setOpen(!open)} className='mt-1 hover:bg-gray-700 rounded px-2 py-1 block text-white font-semibold'>About me</a>)}\n                        {states.gallery && (<a href='#Gallery' onClick={() => setOpen(!open)} className='mt-1 hover:bg-gray-700 rounded px-2 py-1 block text-white font-semibold'>Gallery</a>)}\n                        {states.experience && (<a href='#Experience' onClick={() => setOpen(!open)} className='mt-1 hover:bg-gray-700 rounded px-2 py-1 block text-white font-semibold'>Experience</a>)}\n                        {states.stats && (<a href='#Stats' onClick={() => setOpen(!open)} className='mt-1 hover:bg-gray-700 rounded px-2 py-1 block text-white font-semibold'>Stats</a>)}\n                    </div>\n                )}\n            </div>\n        // </header>\n    );\n}\n\nexport default NavBar;","import React from 'react';\nimport {Parallax, ParallaxLayer} from 'react-spring/renderprops-addons'\n\n// LAYERS\nimport Layer0 from '../static/Background.svg'\nimport Layer1 from '../static/Stars.svg'\nimport Layer2 from '../static/Moon.svg'\nimport Layer3 from '../static/MountainLake.svg'\nimport Layer4 from '../static/Foreground.svg'\n\n// attribution <a href=\"https://www.vecteezy.com/free-vector/nature\">Nature Vectors by Vecteezy</a>\n\n// PROPS\ninterface SplashPageProps {\n    text: string;\n}\n\nconst SplashPage = (props: SplashPageProps) => {\n    return(\n        <Parallax pages={2} scrolling={true}>\n            <ParallaxLayer offset={0} speed={1}>\n                <img src={Layer0} alt='background'></img>\n            </ParallaxLayer>\n            <ParallaxLayer offset={0} speed={1}>\n                <img src={Layer1} alt='stars'></img>\n            </ParallaxLayer>\n            <ParallaxLayer offset={0} speed={2}>\n                <img src={Layer2} alt='moon'></img>\n            </ParallaxLayer>\n            <ParallaxLayer offset={0.3} speed={2}>\n                <div className=\" sm:text-3xl md:text-6xl text-bold text-center text-white h-10\">\n                    <p className='hover:text-gray-200'>\n                        {props.text}\n                    </p>\n                </div>\n                {/* <div className='text-center justify-center items-center mt-8'>\n                    <button className=\"bg-transparent text-white font-semibold hover:text-white py-2 px-4 border border-white hover:border-transparent rounded\">\n                        Button\n                    </button>\n                </div> */}\n            </ParallaxLayer>\n            <ParallaxLayer offset={0} speed={3}>\n                <img src={Layer3} alt='mountain'></img>\n            </ParallaxLayer>\n            <ParallaxLayer offset={0} speed={4}>\n                <img src={Layer4} alt='foreground'></img>\n            </ParallaxLayer>\n        </Parallax>\n    );\n}\n\nexport default SplashPage;","import React from 'react';\n\nconst MyRoom = () => {\n    return(\n        <div className='text-white py-5 bg-blue-800 flex items-center'>\n            <div className='block'>\n                <h2 className='font-semibold px-5'>\n                    Want to talk? Join my room if its open! I'm happy to talk with you.\n                </h2>\n            </div>\n            <div className='block px-5'>\n                {/* State controls which buttons are shown WAIT for API key from Whereby */}\n                <button className='bg-red-600 text-white font-semibold py-2 px-4 border border-red-900 cursor-not-allowed rounded shadow'>\n                    Closed\n                </button>\n                <button className='bg-green-600 hover:bg-green-300 hover:text-green-900 text-white font-semibold py-2 px-4 border border-green-900 rounded shadow'>\n                    Open\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default MyRoom;","import React from \"react\";\n\n// PROPS\ninterface SkillsProps {\n    name: string,\n    rank: string,\n}\n\nconst Skills = (props: SkillsProps) => {\n    return(\n        <div className='text-xl font-medium py-1 flex'>\n            <div className='w-1/2'>\n                {props.name}\n            </div>\n            <div className='w-1/2'>\n                {props.rank}\n            </div>\n        </div>\n    );\n}\n\nexport default Skills;","import React from 'react';\n\n// COMPONENTS\nimport SkillComp from './Skills';\n\n// STATIC\n// import ProfilePicture from '../static/placeholder.png';\n\n// DATA\nimport skills from '../data/skills.json';\n\n\nconst About = () => {\n    return(\n        <div id='About' className='px-10 bg-blue-700 text-white text-center items-center'>\n            <div className='font-black text-5xl'>\n                About\n                {/* <img className='object-center' src={ProfilePicture} alt='profile' height=\"200\" width=\"200\"/> */}\n            </div>\n            <h2 className='text-4xl py-3 font-bold'>\n                Check me out!\n            </h2>\n            <p>\n                Here is a list of technologies and skills I have been working with and obtained.\n            </p>\n            <h3 className='text-3xl py-3 font-bold'>\n                Skills\n            </h3>\n            <div className='py-5'>\n                {false && skills.map((skillitem: any) => <SkillComp name={skillitem.name as string} rank={skillitem.rating as string}/>)}\n                <SkillComp name={'Code'} rank={'3'}/>\n            </div>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\n\n// DATA\nimport quotes from '../data/quotes.json';\n\nfunction pickRandomQuote () {\n    let keys = Object.keys(quotes);\n    let randIndex = keys[Math.floor(Math.random() * keys.length)];\n    // console.log(item);\n    return quotes[keys[randIndex]];\n}\n\nconst SimpleSplashPage = () =>{\n    let quote = pickRandomQuote();\n    return(\n        <div className=\"bg-blue-900 text-white text-center px-10\" >\n            <h1 className='font-medium text-2xl'>\"{quote.quote}\"<br></br><span className='font-thin'>- {quote.author}</span></h1>\n        </div>\n    );\n}\n\nexport default SimpleSplashPage;","import React from 'react';\n\nconst Gallery = () => {\n    return (\n        <div className='bg-blue-600 text-white'>\n            <div className=\"\">Pictures</div>\n            <img src='https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg' alt='imageexample'></img>\n        </div>\n    );\n}\n\nexport default Gallery;","import React from 'react';\n\n// DATA\nimport education from '../data/education.json';\n\nconst Education = () => {\n    return(\n        <div className=\"pb-2 bg-gray-800 text-white text-center items-center\">\n            <div id='Experience' className='text-5xl py-1 font-black'>Education</div>\n                <div className='text-2xl'>\n                    {education.school}\n                </div>\n                <div className='text-xl'>\n                    {education.major}\n                </div>\n                {education.time}\n        </div>\n    );\n}\n\nexport default Education;","import React from 'react';\n\n// DATA\nimport experience from '../data/experience.json';\n\nconst Experience = () => {\n    return(\n        <div className='bg-blue-800 text-white text-center px-10'>\n            <div className='font-black text-5xl py-2'>Experience</div>\n            {experience.map((item: any) => <div className='py-1'>\n                <div className='font-bold text-3xl'>{item.title}</div>\n                <div className='text-2xl font-semibold'>{item.company}</div>\n                <div className='font-medium'>{item.start} - {item.end}</div>\n                <div className='font-thin'>{item.description}</div>\n            </div>)}\n        </div>\n    );\n}\n\nexport default Experience;","import React from 'react';\n\ninterface DownloadsProps {\n    resume?: boolean,\n    certificates?: boolean,\n}\n\nconst Downloads = (props: DownloadsProps) => {\n    return(\n        <div className='text-center text-white'>\n            {props.resume && <div className='px-10 text-5xl bg-blue-900 font-black py-5'>\n                Download Resume\n            </div>}\n            {props.certificates && <div className='px-10 text-5xl bg-blue-800 font-black py-5'>\n                View Certificates\n            </div>}\n        </div>\n    );\n}\n\nexport default Downloads;","import React from 'react';\n\nconst Stats = () => {\n    return(\n        <div className='text-center text-white bg-blue-700 h-10'>\n            Stats\n        </div>\n    );\n}\n\nexport default Stats;","import React from 'react';\n\nconst Footer = () => {\n    return(\n        <div className='text-center text-white bg-blue-900 h-5'>\n            Footer\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\n// STYLES\nimport './styles/main.css';\n\n// COMPONENTS\nimport NavBar from './components/NavBar';\nimport SplashPage from './components/SplashPage';\nimport MyRoom from './components/MyRoom';\nimport About from './components/About';\nimport SimpleSplashPage from './components/SimpleSplashPage';\nimport Gallery from './components/Gallery';\nimport Education from './components/Education';\nimport Experience from './components/Experience';\nimport Downloads from './components/Downloads';\nimport Stats from './components/Stats';\nimport Footer from './components/Footer';\n\n// DATA\nimport state from './data/state.json';\n\nfunction App() {\n  return (\n    <div className=\"justify-center items-center m-auto\">\n      {state.navbar && <NavBar time={state.navbar.time} date={state.navbar.date}/>}\n      {state.splashpage && <SplashPage text={'Aspire to inspire before we expire.'}/>}\n      {state.simplesplashpage && <SimpleSplashPage />}\n      {state.myroom && <MyRoom />}\n      {state.about && <About />}\n      {state.gallery && <Gallery />}\n      {state.education && <Education />}\n      {state.experience && <Experience />}\n      {state.downloads && <Downloads resume={state.downloads.resume} certificates={state.downloads.certificates}/>}\n      {state.stats && <Stats />}\n      {state.footer && <Footer />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}